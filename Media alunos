PREVIEW: 
Crie uma estrutura representando os alunos de um determinado curso. A estrutura deve conter a matrícula do aluno, nome, nota da primeira prova, nota da segunda prova e nota da terceira prova.

(a) Permita ao usuário entrar com os dados de n alunos. (b) Encontre o aluno com maior nota da primeira prova. (c) Encontre o aluno com maior média geral. (d) Encontre o aluno com menor média geral (e) Para cada aluno diga se ele foi aprovado ou reprovado, considerando a média 6 para aprovação.

Input Format

A primeira linha é composta por um número n de alunos. Seguem a matricula (numérico até 65000), nome (string max 255 caracteres) e 3 notas (float com 1 casa de precisão)

Constraints

.

Output Format

A saída devera informar, para cada aluno se ele foi aprovado ou reprovado. Seguido das soluções para as questões (b), (c) e (d)

Sample Input 0

3
13515
Dudu
10.0 3.1 8.2
13516
Lilian
8.5 9.5 9.0
13518
Gustavo
6.0 2.0 2.1
Sample Output 0

Aprovado!
Aprovado!
Reprovado!
O aluno com maior media e: 13516 Lilian 9.0
O aluno com menor media e: 13518 Gustavo 3.4
O aluno com maior P1 e: 13515 Dudu 10.0
Sample Input 1

5
13515
Farofa
1.0 3.1 8.2
13516
Lilian
0.5 9.5 9.0
13518
Gusvo
0.0 2.0 2.1
13517
Pira
0.0 2.0 2.1
13519
Lucas
0.0 2.0 2.1
Sample Output 1

Reprovado!
Aprovado!
Reprovado!
Reprovado!
Reprovado!
O aluno com maior media e: 13516 Lilian 6.3
O aluno com menor media e: 13518 Gusvo 1.4
O aluno com maior P1 e: 13515 Farofa 1.0

CÓDIGO:

#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
typedef struct {
    int RA;
    char nome[255];
    float notas[3];
}Aluno;
 float media(float *vetor, int n){
     int i;
     float soma = 0.0;
     for (i=0; i<n; i++)
        soma+=vetor[i];
     return soma/n;
 }
 void resultado(Aluno v[], int n){
     int i;
     for(i=0; i<n; i++)
         if (media(v[i].notas, 3) >= 6.0)
             printf("Aprovado!\n");
         else 
             printf("Reprovado!\n");
 }
 void maior(Aluno v[], int n){
     int i;
     int p_maior = 0;
     float aux;
     float m=media(v[0].notas, 3);
     for(i=1; i<n; i++){
              aux = media(v[i].notas, 3);
              if(aux>m){
                  p_maior=i;
                  m=aux;                  
              }
         }
     printf("O aluno com maior media e: %d %s %.1f\n", v[p_maior].RA, v[p_maior].nome, m);
 }                     
 void menor(Aluno v[], int n){
     int i;
     int p_menor = 0;
     float aux;
     float m=media(v[0].notas, 3);
     for(i=1; i<n; i++){
              aux = (media(v[i].notas, 3));
              if(aux<m){
                  p_menor=i;
                  m=aux;        
              }
         }
     printf("O aluno com menor media e: %d %s %.1f\n", v[p_menor].RA, v[p_menor].nome, m);
 }           
 void maior_P1(Aluno v[], int n){
     int i;
     int p_maior = 0;
     float aux;
     float m=v[0].notas[0];
     for(i=1; i<n; i++){
              aux = v[i].notas[0];
              if(aux>m){
                  p_maior=i;
                  m=aux;
              }
         }
     printf("O aluno com maior P1 e: %d %s %.1f\n", v[p_maior].RA, v[p_maior].nome, m);
 }
int main(){
    int i, n;
    scanf("%d", &n);
    Aluno v[n];
    for(i=0; i<n; i++){
        scanf("%d", &v[i].RA);
        scanf("%s", v[i].nome);
        scanf("%f %f %f", &v[i].notas[0], &v[i].notas[1], &v[i].notas[2]);
    }
    resultado(v, n);
    maior(v, n);
    menor(v, n);
    maior_P1(v, n);    
    return 0;
}
